networks:
  flinknet:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - flinknet

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - flinknet

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: bybit
      POSTGRES_PASSWORD: bybitpass
      POSTGRES_DB: bybitdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bybit"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - flinknet

  bybit_producer:
    build:
      context: ./bybit-producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
      KAFKA_TOPIC: bybit_trades
    restart: always
    networks:
      - flinknet

  jobmanager:
    build:
      context: .
      dockerfile: flink-python.Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./usrlib:/opt/flink/usrlib
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        python.client.executable: python3
        python.executable: python3
    networks:
      - flinknet

  taskmanager:
    build:
      context: .
      dockerfile: flink-python.Dockerfile
    depends_on:
      - jobmanager
    volumes:
      - ./usrlib:/opt/flink/usrlib
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 4
        python.client.executable: python3
        python.executable: python3
    networks:
      - flinknet

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8082:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - flinknet

  stream-api:
    build:
      context: ./stream-api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - postgres
    networks:
      - flinknet

  db-writer:
    build:
      context: ./db-writer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
      KAFKA_TOPIC: bybit_avg
      POSTGRES_HOST: postgres
      POSTGRES_DB: bybitdb
      POSTGRES_USER: bybit
      POSTGRES_PASSWORD: bybitpass
      DB_NAME: bybit
    restart: always
    networks:
      - flinknet
